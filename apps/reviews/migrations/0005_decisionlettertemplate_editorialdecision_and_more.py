# Generated by Django 4.2 on 2025-10-17 05:00

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('submissions', '0004_submission_review_type'),
        ('journals', '0002_initial'),
        ('users', '0003_verificationrequest_and_more'),
        ('reviews', '0004_review_review_type_reviewversion_reviewformtemplate_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DecisionLetterTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Template name', max_length=200)),
                ('decision_type', models.CharField(choices=[('ACCEPT', 'Accept'), ('REJECT', 'Reject'), ('MINOR_REVISION', 'Minor Revision'), ('MAJOR_REVISION', 'Major Revision')], help_text='Type of decision this template is for', max_length=20)),
                ('subject', models.CharField(help_text='Email subject line (supports variables)', max_length=200)),
                ('body', models.TextField(help_text='Email body content (HTML supported, supports variables)')),
                ('description', models.TextField(blank=True, help_text='Description of this template')),
                ('variables_info', models.JSONField(default=dict, help_text='Information about available variables (for documentation)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False, help_text='Default template for this decision type')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_decision_templates', to='users.profile')),
                ('journal', models.ForeignKey(blank=True, help_text='Journal using this template (null for system default)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decision_letter_templates', to='journals.journal')),
            ],
            options={
                'ordering': ['decision_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EditorialDecision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('decision_type', models.CharField(choices=[('ACCEPT', 'Accept'), ('REJECT', 'Reject'), ('MINOR_REVISION', 'Minor Revision Required'), ('MAJOR_REVISION', 'Major Revision Required')], help_text='Type of editorial decision', max_length=20)),
                ('decision_letter', models.TextField(help_text='Complete decision letter sent to authors')),
                ('confidential_notes', models.TextField(blank=True, help_text='Internal notes not visible to authors')),
                ('reviews_summary', models.JSONField(default=dict, help_text='Summary of all reviews (recommendations, scores, etc.)')),
                ('decision_date', models.DateTimeField(auto_now_add=True)),
                ('revision_deadline', models.DateTimeField(blank=True, help_text='Deadline for submitting revised manuscript', null=True)),
                ('notification_sent', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('decided_by', models.ForeignKey(help_text='Editor who made the decision', on_delete=django.db.models.deletion.CASCADE, related_name='editorial_decisions_made', to='users.profile')),
                ('letter_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='decisions_using_template', to='reviews.decisionlettertemplate')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editorial_decisions', to='submissions.submission')),
            ],
            options={
                'ordering': ['-decision_date'],
            },
        ),
        migrations.CreateModel(
            name='RevisionRound',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('round_number', models.PositiveIntegerField(help_text='Revision round number (1, 2, 3...)')),
                ('status', models.CharField(choices=[('REQUESTED', 'Revision Requested'), ('IN_PROGRESS', 'In Progress'), ('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='REQUESTED', max_length=20)),
                ('revision_requirements', models.TextField(help_text='Detailed requirements for revision')),
                ('reviewer_comments_included', models.BooleanField(default=True, help_text='Whether reviewer comments are shared with authors')),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField(help_text='Deadline for submitting revised manuscript')),
                ('submitted_at', models.DateTimeField(blank=True, help_text='When revised manuscript was submitted', null=True)),
                ('author_notes', models.TextField(blank=True, help_text="Author's notes about the revision")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('editorial_decision', models.ForeignKey(help_text='The decision that triggered this revision round', on_delete=django.db.models.deletion.CASCADE, related_name='revision_rounds', to='reviews.editorialdecision')),
                ('reassigned_reviewers', models.ManyToManyField(blank=True, help_text='Reviewers reassigned for this revision round', related_name='reassigned_revision_rounds', to='users.profile')),
                ('response_letter', models.ForeignKey(blank=True, help_text="Author's response to reviewer comments", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_rounds_as_response', to='submissions.document')),
                ('revised_manuscript', models.ForeignKey(blank=True, help_text='Revised manuscript document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_rounds_as_manuscript', to='submissions.document')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_rounds', to='submissions.submission')),
            ],
            options={
                'ordering': ['-round_number', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='revisionround',
            index=models.Index(fields=['submission', 'round_number'], name='reviews_rev_submiss_9d66a1_idx'),
        ),
        migrations.AddIndex(
            model_name='revisionround',
            index=models.Index(fields=['status'], name='reviews_rev_status_9c527d_idx'),
        ),
        migrations.AddIndex(
            model_name='revisionround',
            index=models.Index(fields=['deadline'], name='reviews_rev_deadlin_0522bb_idx'),
        ),
        migrations.AddIndex(
            model_name='revisionround',
            index=models.Index(fields=['editorial_decision'], name='reviews_rev_editori_c3f8aa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='revisionround',
            unique_together={('submission', 'round_number')},
        ),
        migrations.AddIndex(
            model_name='editorialdecision',
            index=models.Index(fields=['submission', 'decision_type'], name='reviews_edi_submiss_a9393d_idx'),
        ),
        migrations.AddIndex(
            model_name='editorialdecision',
            index=models.Index(fields=['decided_by'], name='reviews_edi_decided_4af185_idx'),
        ),
        migrations.AddIndex(
            model_name='editorialdecision',
            index=models.Index(fields=['decision_date'], name='reviews_edi_decisio_bd023f_idx'),
        ),
        migrations.AddIndex(
            model_name='editorialdecision',
            index=models.Index(fields=['decision_type', 'decision_date'], name='reviews_edi_decisio_3a0934_idx'),
        ),
        migrations.AddIndex(
            model_name='decisionlettertemplate',
            index=models.Index(fields=['journal', 'decision_type', 'is_active'], name='reviews_dec_journal_bce673_idx'),
        ),
        migrations.AddIndex(
            model_name='decisionlettertemplate',
            index=models.Index(fields=['is_default', 'decision_type'], name='reviews_dec_is_defa_83d974_idx'),
        ),
    ]
