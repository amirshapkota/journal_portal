# Generated by Django 4.2 on 2025-10-15 09:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient', models.EmailField(help_text='Recipient email address', max_length=254)),
                ('template_type', models.CharField(blank=True, help_text='Type of email template used', max_length=50)),
                ('subject', models.CharField(max_length=255)),
                ('body_html', models.TextField(blank=True)),
                ('body_text', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('BOUNCED', 'Bounced'), ('DELIVERED', 'Delivered')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('context_data', models.JSONField(default=dict, help_text='Template context data used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_on_login', models.BooleanField(default=False, help_text='Notify on new login')),
                ('email_on_password_change', models.BooleanField(default=True, help_text='Notify on password change')),
                ('email_on_orcid_connected', models.BooleanField(default=True, help_text='Notify when ORCID is connected')),
                ('email_on_orcid_disconnected', models.BooleanField(default=True, help_text='Notify when ORCID is disconnected')),
                ('email_on_verification_submitted', models.BooleanField(default=True, help_text='Notify when verification request is submitted')),
                ('email_on_verification_approved', models.BooleanField(default=True, help_text='Notify when verification is approved')),
                ('email_on_verification_rejected', models.BooleanField(default=True, help_text='Notify when verification is rejected')),
                ('email_on_verification_info_requested', models.BooleanField(default=True, help_text='Notify when admin requests additional information')),
                ('email_on_submission_received', models.BooleanField(default=True, help_text='Notify when submission is received')),
                ('email_on_submission_status_change', models.BooleanField(default=True, help_text='Notify on submission status changes')),
                ('email_on_review_assigned', models.BooleanField(default=True, help_text='Notify when review is assigned')),
                ('email_on_review_reminder', models.BooleanField(default=True, help_text='Send review deadline reminders')),
                ('email_on_decision_made', models.BooleanField(default=True, help_text='Notify when editorial decision is made')),
                ('enable_daily_digest', models.BooleanField(default=False, help_text='Receive daily digest of activities')),
                ('enable_weekly_digest', models.BooleanField(default=False, help_text='Receive weekly digest of activities')),
                ('email_notifications_enabled', models.BooleanField(default=True, help_text='Master switch for all email notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Notification Preference',
                'verbose_name_plural': 'Email Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('template_type', models.CharField(choices=[('WELCOME', 'Welcome Email'), ('EMAIL_VERIFICATION', 'Email Verification'), ('PASSWORD_RESET', 'Password Reset'), ('ORCID_CONNECTED', 'ORCID Connected'), ('ORCID_DISCONNECTED', 'ORCID Disconnected'), ('VERIFICATION_SUBMITTED', 'Verification Request Submitted'), ('VERIFICATION_APPROVED', 'Verification Request Approved'), ('VERIFICATION_REJECTED', 'Verification Request Rejected'), ('VERIFICATION_INFO_REQUESTED', 'Additional Information Requested'), ('VERIFICATION_USER_RESPONDED', 'User Responded to Info Request'), ('SUBMISSION_RECEIVED', 'Submission Received'), ('REVIEW_ASSIGNED', 'Review Assigned'), ('REVIEW_COMPLETED', 'Review Completed'), ('DECISION_MADE', 'Editorial Decision')], help_text='Type of email template', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Human-readable template name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of when this template is used')),
                ('subject', models.CharField(help_text='Email subject line (supports variables)', max_length=255)),
                ('html_body', models.TextField(help_text='HTML email body (supports variables)')),
                ('text_body', models.TextField(blank=True, help_text='Plain text fallback (auto-generated if empty)')),
                ('available_variables', models.JSONField(default=list, help_text='List of available template variables')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is currently in use')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['template_type'],
            },
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['template_type', 'is_active'], name='notificatio_templat_57a39c_idx'),
        ),
        migrations.AddField(
            model_name='emailnotificationpreference',
            name='user',
            field=models.OneToOneField(help_text='User these preferences belong to', on_delete=django.db.models.deletion.CASCADE, related_name='email_preferences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User this email was sent to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_emails', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_d274b7_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['user', 'template_type'], name='notificatio_user_id_aead98_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['status', 'created_at'], name='notificatio_status_6192b4_idx'),
        ),
    ]
