# Generated by Django 4.2 on 2025-10-15 08:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_alter_customuser_managers'),
    ]

    operations = [
        migrations.CreateModel(
            name='VerificationRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requested_role', models.CharField(choices=[('AUTHOR', 'Author'), ('REVIEWER', 'Reviewer'), ('BOTH', 'Author and Reviewer')], help_text='Role being requested for verification', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('INFO_REQUESTED', 'Additional Information Requested'), ('WITHDRAWN', 'Withdrawn by User')], default='PENDING', help_text='Current status of verification request', max_length=20)),
                ('affiliation', models.CharField(help_text='Current institutional affiliation', max_length=255)),
                ('affiliation_email', models.EmailField(help_text='Institutional email address', max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('research_interests', models.TextField(blank=True, help_text='Research interests and expertise areas')),
                ('academic_position', models.CharField(blank=True, help_text='Current academic position (e.g., Professor, PhD Student)', max_length=100)),
                ('supporting_documents', models.JSONField(default=list, help_text='List of supporting document references')),
                ('orcid_verified', models.BooleanField(default=False, help_text='Whether ORCID is connected and verified')),
                ('orcid_id', models.CharField(blank=True, help_text='ORCID iD at time of request', max_length=19)),
                ('auto_score', models.IntegerField(default=0, help_text='Automated verification score (0-100)')),
                ('score_details', models.JSONField(default=dict, help_text='Breakdown of scoring factors')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='When the request was reviewed', null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes from admin review')),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection (shown to user)')),
                ('additional_info_requested', models.TextField(blank=True, help_text='Additional information requested from user')),
                ('user_response', models.TextField(blank=True, help_text="User's response to additional info request")),
                ('user_response_at', models.DateTimeField(blank=True, help_text='When user responded to info request', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(help_text='User profile requesting verification', on_delete=django.db.models.deletion.CASCADE, related_name='verification_requests', to='users.profile')),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='Admin who reviewed this request', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='verificationrequest',
            index=models.Index(fields=['profile', 'status'], name='users_verif_profile_2d9ce4_idx'),
        ),
        migrations.AddIndex(
            model_name='verificationrequest',
            index=models.Index(fields=['status', 'created_at'], name='users_verif_status_502c20_idx'),
        ),
        migrations.AddIndex(
            model_name='verificationrequest',
            index=models.Index(fields=['reviewed_by', 'status'], name='users_verif_reviewe_53b91f_idx'),
        ),
        migrations.AddIndex(
            model_name='verificationrequest',
            index=models.Index(fields=['auto_score'], name='users_verif_auto_sc_c4cd65_idx'),
        ),
    ]
